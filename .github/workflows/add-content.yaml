name: Auto Generate Content

on:
  # 매일 0시에 자동 실행 (KST 기준)
  schedule:
    - cron: '0 15 * * *'  # UTC 15:00 = KST 00:00

  # 수동 트리거 지원
  workflow_dispatch:
    inputs:
      language:
        description: '언어 코드'
        required: true
        default: 'en'
        type: choice
        options:
          - en
          - ja
      difficulty:
        description: '난이도'
        required: true
        default: '초급'
        type: choice
        options:
          - 초급
          - 중급
          - 고급

jobs:
  generate-content:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.17.1

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install

      - name: Install gemini-cli
        run: |
          npm install -g @google/gemini-cli
          echo "$(npm root -g)/../bin" >> $GITHUB_PATH

      - name: Generate content
        id: generate
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
        run: |
          # 매개변수 설정 (수동 트리거 시 입력값 사용, 크론 실행 시 기본값)
          LANGUAGE="${{ github.event.inputs.language || 'en' }}"
          DIFFICULTY="${{ github.event.inputs.difficulty || '초급' }}"

          echo "언어: $LANGUAGE"
          echo "난이도: $DIFFICULTY"

          # 스크립트 실행
          chmod +x .github/scripts/generate-content.sh
          ./.github/scripts/generate-content.sh "$LANGUAGE" "$DIFFICULTY"

      - name: Commit and push changes
        env:
          LANGUAGE: ${{ github.event.inputs.language || 'en' }}
          DIFFICULTY: ${{ github.event.inputs.difficulty || '초급' }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # 생성된 파일 확인
          if [ -n "$(git status --porcelain)" ]; then
            # 새로 생성된 파일 찾기
            NEW_FILE=$(git status --porcelain | grep "^??" | grep "content/source/.*\.md" | awk '{print $2}' | head -1)

            if [ -z "$NEW_FILE" ]; then
              # 수정된 파일 찾기 (생성이 아니라 수정인 경우)
              NEW_FILE=$(git status --porcelain | grep "^ M" | grep "content/source/.*\.md" | awk '{print $2}' | head -1)
            fi

            # 해당 파일에서 제목 추출
            if [ -n "$NEW_FILE" ]; then
              TITLE=$(grep -m 1 "^title:" "$NEW_FILE" | sed 's/title: "\(.*\)"/\1/' | sed 's/title: //' | tr -d '"')
            else
              TITLE="새 학습 콘텐츠"
            fi

            if [ -z "$TITLE" ]; then
              TITLE="새 학습 콘텐츠"
            fi

            git add content/
            git commit -m "content: ${TITLE} (${LANGUAGE} ${DIFFICULTY})"

            # act 로컬 환경에서는 push 스킵
            if [ -z "$ACT" ]; then
              git push
              echo "✅ 커밋 및 푸시 완료: content: ${TITLE} (${LANGUAGE} ${DIFFICULTY})"
            else
              echo "✅ 커밋 완료 (act 환경이므로 push 스킵): content: ${TITLE} (${LANGUAGE} ${DIFFICULTY})"
            fi
          else
            echo "⚠️  변경사항이 없습니다."
          fi

      - name: Summary
        if: always()
        run: |
          echo "## 콘텐츠 생성 완료 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **언어**: ${{ github.event.inputs.language || 'en' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **난이도**: ${{ github.event.inputs.difficulty || '초급' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **생성 시각**: $(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
